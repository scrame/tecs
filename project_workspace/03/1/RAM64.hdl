// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {

    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=ramsel0,b=ramsel1,c=ramsel2,d=ramsel3,e=ramsel4,f=ramsel5,g=ramsel6,h=ramsel7);

    RAM8(in=in,out=registerout0,load=ramsel0,address=address[0..2]);
    RAM8(in=in,out=registerout1,load=ramsel1,address=address[0..2]);
    RAM8(in=in,out=registerout2,load=ramsel2,address=address[0..2]);
    RAM8(in=in,out=registerout3,load=ramsel3,address=address[0..2]);
    RAM8(in=in,out=registerout4,load=ramsel4,address=address[0..2]);
    RAM8(in=in,out=registerout5,load=ramsel5,address=address[0..2]);
    RAM8(in=in,out=registerout6,load=ramsel6,address=address[0..2]);
    RAM8(in=in,out=registerout7,load=ramsel7,address=address[0..2]);

    Mux8Way16(a=registerout0,b=registerout1,c=registerout2,d=registerout3,e=registerout4,f=registerout5,g=registerout6,h=registerout7,sel=address[3..5],out=out);
}
