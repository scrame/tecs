// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM4K.hdl

/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {

    IN  in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=ramsel0,b=ramsel1,c=ramsel2,d=ramsel3,e=ramsel4,f=ramsel5,g=ramsel6,h=ramsel7);

    RAM512(in=in,out=out0,load=ramsel0,address=address[0..8]);
    RAM512(in=in,out=out1,load=ramsel1,address=address[0..8]);
    RAM512(in=in,out=out2,load=ramsel2,address=address[0..8]);
    RAM512(in=in,out=out3,load=ramsel3,address=address[0..8]);
    RAM512(in=in,out=out4,load=ramsel4,address=address[0..8]);
    RAM512(in=in,out=out5,load=ramsel5,address=address[0..8]);
    RAM512(in=in,out=out6,load=ramsel6,address=address[0..8]);
    RAM512(in=in,out=out7,load=ramsel7,address=address[0..8]);

    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address[9..11],out=out);

}
