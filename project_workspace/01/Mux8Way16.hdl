// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor.  
 * out = a -- if sel=000
 *       b -- if sel=001
 *       ...
 *       h -- if sel=111
 */
 
CHIP Mux8Way16 {

    IN  a[16], b[16], c[16], d[16],
        e[16], f[16], g[16], h[16],
        sel[3];

    OUT out[16];

    PARTS: 

// for i in {0..15}; do; echo "    Mux(a=a[$i], b=b[$i], sel=sel[0], out=outA$i);\n    Mux(a=c[$i], b=d[$i], sel=sel[0], out=outB$i);\n    Mux(a=e[$i], b=f[$i], sel=sel[0], out=outC$i);\n    Mux(a=g[$i], b=h[$i], sel=sel[0], out=outD$i);\n    Mux(a=outA$i, b=outB$i, sel=sel[1], out=muxA$i);\n    Mux(a=outC$i, b=outD$i, sel=sel[1], out=muxB$i);\n    Mux(a=muxA$i, b=muxB$i, sel=sel[2], out=out[$i]);" ; done > out.txt

    Mux(a=a[0], b=b[0], sel=sel[0], out=outA0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=outB0);
    Mux(a=e[0], b=f[0], sel=sel[0], out=outC0);
    Mux(a=g[0], b=h[0], sel=sel[0], out=outD0);
    Mux(a=outA0, b=outB0, sel=sel[1], out=muxA0);
    Mux(a=outC0, b=outD0, sel=sel[1], out=muxB0);
    Mux(a=muxA0, b=muxB0, sel=sel[2], out=out[0]);
    Mux(a=a[1], b=b[1], sel=sel[0], out=outA1);
    Mux(a=c[1], b=d[1], sel=sel[0], out=outB1);
    Mux(a=e[1], b=f[1], sel=sel[0], out=outC1);
    Mux(a=g[1], b=h[1], sel=sel[0], out=outD1);
    Mux(a=outA1, b=outB1, sel=sel[1], out=muxA1);
    Mux(a=outC1, b=outD1, sel=sel[1], out=muxB1);
    Mux(a=muxA1, b=muxB1, sel=sel[2], out=out[1]);
    Mux(a=a[2], b=b[2], sel=sel[0], out=outA2);
    Mux(a=c[2], b=d[2], sel=sel[0], out=outB2);
    Mux(a=e[2], b=f[2], sel=sel[0], out=outC2);
    Mux(a=g[2], b=h[2], sel=sel[0], out=outD2);
    Mux(a=outA2, b=outB2, sel=sel[1], out=muxA2);
    Mux(a=outC2, b=outD2, sel=sel[1], out=muxB2);
    Mux(a=muxA2, b=muxB2, sel=sel[2], out=out[2]);
    Mux(a=a[3], b=b[3], sel=sel[0], out=outA3);
    Mux(a=c[3], b=d[3], sel=sel[0], out=outB3);
    Mux(a=e[3], b=f[3], sel=sel[0], out=outC3);
    Mux(a=g[3], b=h[3], sel=sel[0], out=outD3);
    Mux(a=outA3, b=outB3, sel=sel[1], out=muxA3);
    Mux(a=outC3, b=outD3, sel=sel[1], out=muxB3);
    Mux(a=muxA3, b=muxB3, sel=sel[2], out=out[3]);
    Mux(a=a[4], b=b[4], sel=sel[0], out=outA4);
    Mux(a=c[4], b=d[4], sel=sel[0], out=outB4);
    Mux(a=e[4], b=f[4], sel=sel[0], out=outC4);
    Mux(a=g[4], b=h[4], sel=sel[0], out=outD4);
    Mux(a=outA4, b=outB4, sel=sel[1], out=muxA4);
    Mux(a=outC4, b=outD4, sel=sel[1], out=muxB4);
    Mux(a=muxA4, b=muxB4, sel=sel[2], out=out[4]);
    Mux(a=a[5], b=b[5], sel=sel[0], out=outA5);
    Mux(a=c[5], b=d[5], sel=sel[0], out=outB5);
    Mux(a=e[5], b=f[5], sel=sel[0], out=outC5);
    Mux(a=g[5], b=h[5], sel=sel[0], out=outD5);
    Mux(a=outA5, b=outB5, sel=sel[1], out=muxA5);
    Mux(a=outC5, b=outD5, sel=sel[1], out=muxB5);
    Mux(a=muxA5, b=muxB5, sel=sel[2], out=out[5]);
    Mux(a=a[6], b=b[6], sel=sel[0], out=outA6);
    Mux(a=c[6], b=d[6], sel=sel[0], out=outB6);
    Mux(a=e[6], b=f[6], sel=sel[0], out=outC6);
    Mux(a=g[6], b=h[6], sel=sel[0], out=outD6);
    Mux(a=outA6, b=outB6, sel=sel[1], out=muxA6);
    Mux(a=outC6, b=outD6, sel=sel[1], out=muxB6);
    Mux(a=muxA6, b=muxB6, sel=sel[2], out=out[6]);
    Mux(a=a[7], b=b[7], sel=sel[0], out=outA7);
    Mux(a=c[7], b=d[7], sel=sel[0], out=outB7);
    Mux(a=e[7], b=f[7], sel=sel[0], out=outC7);
    Mux(a=g[7], b=h[7], sel=sel[0], out=outD7);
    Mux(a=outA7, b=outB7, sel=sel[1], out=muxA7);
    Mux(a=outC7, b=outD7, sel=sel[1], out=muxB7);
    Mux(a=muxA7, b=muxB7, sel=sel[2], out=out[7]);
    Mux(a=a[8], b=b[8], sel=sel[0], out=outA8);
    Mux(a=c[8], b=d[8], sel=sel[0], out=outB8);
    Mux(a=e[8], b=f[8], sel=sel[0], out=outC8);
    Mux(a=g[8], b=h[8], sel=sel[0], out=outD8);
    Mux(a=outA8, b=outB8, sel=sel[1], out=muxA8);
    Mux(a=outC8, b=outD8, sel=sel[1], out=muxB8);
    Mux(a=muxA8, b=muxB8, sel=sel[2], out=out[8]);
    Mux(a=a[9], b=b[9], sel=sel[0], out=outA9);
    Mux(a=c[9], b=d[9], sel=sel[0], out=outB9);
    Mux(a=e[9], b=f[9], sel=sel[0], out=outC9);
    Mux(a=g[9], b=h[9], sel=sel[0], out=outD9);
    Mux(a=outA9, b=outB9, sel=sel[1], out=muxA9);
    Mux(a=outC9, b=outD9, sel=sel[1], out=muxB9);
    Mux(a=muxA9, b=muxB9, sel=sel[2], out=out[9]);
    Mux(a=a[10], b=b[10], sel=sel[0], out=outA10);
    Mux(a=c[10], b=d[10], sel=sel[0], out=outB10);
    Mux(a=e[10], b=f[10], sel=sel[0], out=outC10);
    Mux(a=g[10], b=h[10], sel=sel[0], out=outD10);
    Mux(a=outA10, b=outB10, sel=sel[1], out=muxA10);
    Mux(a=outC10, b=outD10, sel=sel[1], out=muxB10);
    Mux(a=muxA10, b=muxB10, sel=sel[2], out=out[10]);
    Mux(a=a[11], b=b[11], sel=sel[0], out=outA11);
    Mux(a=c[11], b=d[11], sel=sel[0], out=outB11);
    Mux(a=e[11], b=f[11], sel=sel[0], out=outC11);
    Mux(a=g[11], b=h[11], sel=sel[0], out=outD11);
    Mux(a=outA11, b=outB11, sel=sel[1], out=muxA11);
    Mux(a=outC11, b=outD11, sel=sel[1], out=muxB11);
    Mux(a=muxA11, b=muxB11, sel=sel[2], out=out[11]);
    Mux(a=a[12], b=b[12], sel=sel[0], out=outA12);
    Mux(a=c[12], b=d[12], sel=sel[0], out=outB12);
    Mux(a=e[12], b=f[12], sel=sel[0], out=outC12);
    Mux(a=g[12], b=h[12], sel=sel[0], out=outD12);
    Mux(a=outA12, b=outB12, sel=sel[1], out=muxA12);
    Mux(a=outC12, b=outD12, sel=sel[1], out=muxB12);
    Mux(a=muxA12, b=muxB12, sel=sel[2], out=out[12]);
    Mux(a=a[13], b=b[13], sel=sel[0], out=outA13);
    Mux(a=c[13], b=d[13], sel=sel[0], out=outB13);
    Mux(a=e[13], b=f[13], sel=sel[0], out=outC13);
    Mux(a=g[13], b=h[13], sel=sel[0], out=outD13);
    Mux(a=outA13, b=outB13, sel=sel[1], out=muxA13);
    Mux(a=outC13, b=outD13, sel=sel[1], out=muxB13);
    Mux(a=muxA13, b=muxB13, sel=sel[2], out=out[13]);
    Mux(a=a[14], b=b[14], sel=sel[0], out=outA14);
    Mux(a=c[14], b=d[14], sel=sel[0], out=outB14);
    Mux(a=e[14], b=f[14], sel=sel[0], out=outC14);
    Mux(a=g[14], b=h[14], sel=sel[0], out=outD14);
    Mux(a=outA14, b=outB14, sel=sel[1], out=muxA14);
    Mux(a=outC14, b=outD14, sel=sel[1], out=muxB14);
    Mux(a=muxA14, b=muxB14, sel=sel[2], out=out[14]);
    Mux(a=a[15], b=b[15], sel=sel[0], out=outA15);
    Mux(a=c[15], b=d[15], sel=sel[0], out=outB15);
    Mux(a=e[15], b=f[15], sel=sel[0], out=outC15);
    Mux(a=g[15], b=h[15], sel=sel[0], out=outD15);
    Mux(a=outA15, b=outB15, sel=sel[1], out=muxA15);
    Mux(a=outC15, b=outD15, sel=sel[1], out=muxB15);
    Mux(a=muxA15, b=muxB15, sel=sel[2], out=out[15]);


}